[{"/home/melkiy/projects/daily_productivity/src/reportWebVitals.js":"1","/home/melkiy/projects/daily_productivity/src/index.js":"2","/home/melkiy/projects/daily_productivity/src/components/App.js":"3","/home/melkiy/projects/daily_productivity/src/components/DateInDayLine.js":"4","/home/melkiy/projects/daily_productivity/src/components/TimeLine.js":"5","/home/melkiy/projects/daily_productivity/src/components/SetInterval.js":"6","/home/melkiy/projects/daily_productivity/src/components/DayLine.js":"7"},{"size":362,"mtime":1606233356957,"results":"8","hashOfConfig":"9"},{"size":521,"mtime":1627049524660,"results":"10","hashOfConfig":"9"},{"size":581,"mtime":1627113449628,"results":"11","hashOfConfig":"9"},{"size":442,"mtime":1627049524660,"results":"12","hashOfConfig":"9"},{"size":3793,"mtime":1627113319480,"results":"13","hashOfConfig":"9"},{"size":2170,"mtime":1627133274017,"results":"14","hashOfConfig":"9"},{"size":1191,"mtime":1627056555646,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"z3nhvi",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/melkiy/projects/daily_productivity/src/reportWebVitals.js",[],["33","34"],"/home/melkiy/projects/daily_productivity/src/index.js",[],"/home/melkiy/projects/daily_productivity/src/components/App.js",[],["35","36"],"/home/melkiy/projects/daily_productivity/src/components/DateInDayLine.js",[],"/home/melkiy/projects/daily_productivity/src/components/TimeLine.js",["37","38","39","40","41"],"import React, { useState, useEffect, useCallback } from 'react';\nimport DayLine from './DayLine'\nimport Simple from './Simple'\n\nconst TimeLine = function ({ returnToAppMarkedIntervals }) {\n\n\tconst [intervalsList, setIntervalsList] = useState([]);\n\tconst [markedIntervalsTL, setMarkedIntervalsTL] = useState({})\n\tconst [num_TL, setNum_TL] = useState(555);\n\n\tfunction createEmptyDayLine(isEmpty = true) {\n\t\tconst emptyDayLine = [];\n\t\tfor (let i = 0; i < 48; i++) {\n\t\t\temptyDayLine.push({ 'value': '' });\n\t\t}\n\t\temptyDayLine.push(isEmpty);\n\t\treturn emptyDayLine;\n\t}\n\n\tfunction SplitArrByDayLines(arr) {\n\t\tlet result = [];\n\t\tlet dayLine = [...createEmptyDayLine(false)]\n\t\tlet prevDay = '';\n\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tconst currentDay = arr[i].day\n\t\t\tconsole.log(currentDay)\n\t\t\tif (prevDay && currentDay !== prevDay) {\n\t\t\t\tresult.push([prevDay, ...dayLine]);\n\t\t\t\tdayLine = [...createEmptyDayLine(false)]\n\t\t\t}\n\t\t\tdayLine[arr[i].minutes / 30].value = arr[i].value_;\n\t\t\tprevDay = currentDay\n\t\t}\n\n\t\tresult.push([prevDay, ...dayLine]);\n\t\treturn result;\n\t}\n\n\tfunction getData() {\n\t\tfetch(\n\t\t\t'http://localhost:3001/intervals?user_id=000001',\n\t\t\t{ method: 'GET' }\n\t\t)\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => setIntervalsList(SplitArrByDayLines(json)))\n\t\t\t.catch(error => console.error('error', error))\n\n\t}\n\n\tfunction formatDateToStr_ddmmyy(date) {\n\t\tlet curDay = String(date.getDate())\n\t\tlet curMonth = String(date.getMonth())\n\t\tlet curYear = String(date.getFullYear()).slice(2, 4)\n\t\treturn `${(curDay.length === 1) ? '0' + curDay : curDay}.${(curMonth.length === 1) ? '0' + curMonth : curMonth}.${curYear}`\n\t}\n\n\tDate.prototype.toDateInputValue = (function () {\n\t\tvar local = new Date(this);\n\t\tlocal.setMinutes(this.getMinutes() - this.getTimezoneOffset());\n\t\treturn local.toJSON().slice(0, 10);\n\t});\n\n\tfunction addEmptyDay() {\n\t\tsetIntervalsList(prev => {\n\t\t\treturn [...prev, [(new Date).toDateInputValue(), ...createEmptyDayLine()]]\n\t\t})\n\t}\n\n\t// function supplimentMarkedIntervals(){\n\n\t// \tconst result = []\n\n\t// \tfor (let day in markedIntervalsTL) {\n\t// \t\tconsole.log(\"supplimentMarkedIntervals\")\n\t// \t\tconst dayArrayFromIntervalsList = intervalsList.find(el => {return (el[0] === day)})\t\n\t// \t\tconsole.log(dayArrayFromIntervalsList)\n\n\n\t// \t\tmarkedIntervalsTL[day].forEach(element => {\n\t\t\t\t\n\t// \t\t\tconst valueForDay = dayArrayFromIntervalsList.find((el, i) => i === element)\n\t// \t\t\tresult.push({ day: day, index: element, value: valueForDay})\n\t\t\t\t\n\t// \t\t});\n\n\t// \t}\n\t// \tconsole.log(result)\n\t// \treturn result;\n\n\t// }\n\n\tuseEffect(() => {\n\t\tconsole.log('useEffect markedIntervalsTL')\n\t\tconsole.log(JSON.stringify(markedIntervalsTL))\n\t\treturnToAppMarkedIntervals(markedIntervalsTL);\n\n\t}, [markedIntervalsTL])\n\n\tfunction returnToTimeLineMarkedIntervals(day, markedIntervalsForDay) {\n\t\t\n\t\t// console.log('returnToTimeLineMarkedIntervals')\n\t\t// console.log(day)\n\t\t// console.log(markedIntervalsForDay)\n\t\t//console.log('returnToTimeLineMarkedIntervals PREV markedIntervalsTL')\n\t\t//console.log(JSON.stringify(markedIntervalsTL))\n\n\t\tsetMarkedIntervalsTL({ ...markedIntervalsTL, [day]: [...markedIntervalsForDay] })\n\t}\n\n\tconst returnToTimeLine = useCallback((numFromSimple) => {\n\t\tsetNum_TL(numFromSimple)\n\t})\n\n\treturn (<div className='intervals'>\n\t\t<button className='btn getBtn' onClick={getData}>Update</button>\n\t\t<div className='IntervalsTable'>\n\t\t\t{intervalsList.map((day, j) => <DayLine key={j} lineIndex={j} currentDayArray={[...day]} returnToTimeLineMarkedIntervals={returnToTimeLineMarkedIntervals} returnToAppMarkedIntervals={returnToAppMarkedIntervals} />)}\n\t\t</div>\n\t\t<button className='btn addEmptyDayBtn' onClick={addEmptyDay}>+</button>\n\t\t<Simple returnToTimeLine={returnToTimeLine} />\n\t\t<div className='simpleTL'>{num_TL}</div>\n\t</div>)\n}\n\nexport default TimeLine","/home/melkiy/projects/daily_productivity/src/components/SetInterval.js",[],"/home/melkiy/projects/daily_productivity/src/components/DayLine.js",["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":51,"column":11,"nodeType":"52","messageId":"53","endLine":51,"endColumn":33},{"ruleId":"54","severity":1,"message":"55","line":58,"column":2,"nodeType":"56","messageId":"57","endLine":62,"endColumn":4},{"ruleId":"58","severity":1,"message":"59","line":66,"column":23,"nodeType":"60","messageId":"61","endLine":66,"endColumn":31,"fix":"62"},{"ruleId":"63","severity":1,"message":"64","line":98,"column":5,"nodeType":"65","endLine":98,"endColumn":24,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":111,"column":27,"nodeType":"52","endLine":111,"endColumn":38},{"ruleId":"50","severity":1,"message":"68","line":6,"column":19,"nodeType":"52","messageId":"53","endLine":6,"endColumn":30},{"ruleId":"63","severity":1,"message":"69","line":17,"column":8,"nodeType":"65","endLine":17,"endColumn":37,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],["71"],["72"],"no-unused-vars","'formatDateToStr_ddmmyy' is defined but never used.","Identifier","unusedVar","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"73","text":"74"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'returnToAppMarkedIntervals'. Either include it or remove the dependency array. If 'returnToAppMarkedIntervals' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["75"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'setDayArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'returnToTimeLineMarkedIntervals'. Either include it or remove the dependency array. If 'returnToTimeLineMarkedIntervals' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["76"],"no-global-assign","no-unsafe-negation",[1907,1907],"()",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [markedIntervalsTL, returnToAppMarkedIntervals]",{"range":"81","text":"82"},"Update the dependencies array to be: [markedIntervals, currentDay, returnToTimeLineMarkedIntervals]",{"range":"83","text":"84"},[2709,2728],"[markedIntervalsTL, returnToAppMarkedIntervals]",[581,610],"[markedIntervals, currentDay, returnToTimeLineMarkedIntervals]"]