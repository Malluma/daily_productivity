[{"/home/melkiy/projects/daily_productivity/src/App.js":"1","/home/melkiy/projects/daily_productivity/src/reportWebVitals.js":"2","/home/melkiy/projects/daily_productivity/src/index.js":"3","/home/melkiy/projects/daily_productivity/src/Intervals.js":"4","/home/melkiy/projects/daily_productivity/src/SetInterval.js":"5","/home/melkiy/projects/daily_productivity/src/TimeLine.js":"6","/home/melkiy/projects/daily_productivity/src/DateInDayLine.js":"7","/home/melkiy/projects/daily_productivity/src/DayLine.js":"8","/home/melkiy/projects/daily_productivity/src/Simple.js":"9"},{"size":634,"mtime":1627022810438,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1606233356957,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1625059136671,"results":"13","hashOfConfig":"11"},{"size":761,"mtime":1625837883269,"results":"14","hashOfConfig":"11"},{"size":1795,"mtime":1626787379051,"results":"15","hashOfConfig":"11"},{"size":3409,"mtime":1627045712289,"results":"16","hashOfConfig":"11"},{"size":396,"mtime":1627022160074,"results":"17","hashOfConfig":"11"},{"size":2662,"mtime":1626943491836,"results":"18","hashOfConfig":"11"},{"size":454,"mtime":1627023508393,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z3nhvi",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/melkiy/projects/daily_productivity/src/App.js",[],"/home/melkiy/projects/daily_productivity/src/reportWebVitals.js",[],["41","42"],"/home/melkiy/projects/daily_productivity/src/index.js",[],["43","44"],"/home/melkiy/projects/daily_productivity/src/Intervals.js",[],"/home/melkiy/projects/daily_productivity/src/SetInterval.js",[],"/home/melkiy/projects/daily_productivity/src/TimeLine.js",["45","46","47","48"],"import React, {useState, useCallback} from 'react';\nimport DayLine from './DayLine'\nimport Simple from './Simple'\n\nconst TimeLine = function ({returnToAppMarkedIntervals}) {\n\n    const [intervalsList, setIntervalsList] = useState([]);\n    const [markedIntervalsTL, setMarkedIntervalsTL] = useState({})\n    const [num_TL, setNum_TL] = useState(555);\n\n    function createEmptyDayLine(isEmpty=true){\n        const emptyDayLine = [];\n\n        for(let i=0; i<48;i++){\n            emptyDayLine.push({'value': ''});\n        }\n\n        emptyDayLine.push(isEmpty);\n\n        return emptyDayLine;\n    }\n\n    function SplitArrByDayLines(arr){  \n\n        let result = [];\n        let dayLine = [...createEmptyDayLine(false)]\n        let prevDay = '';\n\n        for (let i=0; i<arr.length; i++){\n\n            const currentDay = arr[i].day\n            console.log(currentDay)\n\n            if(prevDay && currentDay !==prevDay) { \n                result.push([prevDay,...dayLine]);\n                dayLine = [...createEmptyDayLine(false)]\n            }\n            \n            dayLine[arr[i].minutes/30].value = arr[i].value_;\n            prevDay = currentDay\n        }\n\n        result.push([prevDay,...dayLine]);\n    \n        return result;\n    }\n    \n    function getData() {\n        fetch(\n        'http://localhost:3001/intervals?user_id=000001',\n        { method: 'GET' }\n        )\n        .then( response => response.json() )\n        .then( json => setIntervalsList(SplitArrByDayLines(json)))\n        .catch( error => console.error('error', error))\n        \n    }\n    \n    function formatDateToStr_ddmmyy(date){\n        let curDay = String(date.getDate())\n        let curMonth = String(date.getMonth())\n        let curYear = String(date.getFullYear()).slice(2,4)\n        return `${(curDay.length === 1)? '0'+curDay: curDay}.${(curMonth.length === 1)? '0'+curMonth: curMonth}.${curYear}`\n    }\n\n    Date.prototype.toDateInputValue = (function() {\n        var local = new Date(this);\n        local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\n        return local.toJSON().slice(0,10);\n    });\n\n    function addEmptyDay(){\n        setIntervalsList(prev=>{\n            return [...prev, [(new Date).toDateInputValue(),...createEmptyDayLine()]]\n        })\n    }\n\n    function returnToTimeLineMarkedIntervals(day,markedIntervalsForDay){\n       \n        setMarkedIntervalsTL({...markedIntervalsTL, [day]: [...markedIntervalsForDay]})\n        console.log('markedIntervalsTL')\n        console.log(day)\n        console.log(markedIntervalsForDay)\n        console.log(JSON.stringify(markedIntervalsTL))\n\n        //returnToAppMarkedIntervals(markedIntervals);\n    }\n\n    const returnToTimeLine = useCallback((numFromSimple) => {\n        setNum_TL(numFromSimple)})\n\n    return (<div className='intervals'>\n            <button className ='btn getBtn' onClick={getData}>Update</button>\n            <div className='IntervalsTable'>\n                 { intervalsList.map((day,j) => <DayLine key={j} lineIndex={j} currentDayArray={[...day]} returnToTimeLineMarkedIntervals={returnToTimeLineMarkedIntervals} returnToAppMarkedIntervals={returnToAppMarkedIntervals}/>)}\n            </div>\n            <button className ='btn addEmptyDayBtn' onClick={addEmptyDay}>+</button>\n            <Simple  returnToTimeLine={returnToTimeLine}/>\n            <div className='simpleTL'>{num_TL}</div>\n          </div>)\n}\n\nexport default TimeLine","/home/melkiy/projects/daily_productivity/src/DateInDayLine.js",[],"/home/melkiy/projects/daily_productivity/src/DayLine.js",["49"],"/home/melkiy/projects/daily_productivity/src/Simple.js",["50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":59,"column":14,"nodeType":"59","messageId":"60","endLine":59,"endColumn":36},{"ruleId":"61","severity":1,"message":"62","line":66,"column":5,"nodeType":"63","messageId":"64","endLine":70,"endColumn":7},{"ruleId":"65","severity":1,"message":"66","line":74,"column":32,"nodeType":"67","messageId":"68","endLine":74,"endColumn":40,"fix":"69"},{"ruleId":"70","severity":1,"message":"71","line":89,"column":30,"nodeType":"59","endLine":89,"endColumn":41},{"ruleId":"57","severity":1,"message":"72","line":6,"column":22,"nodeType":"59","messageId":"60","endLine":6,"endColumn":33},{"ruleId":"70","severity":1,"message":"73","line":11,"column":8,"nodeType":"74","endLine":11,"endColumn":13,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],["76"],["77"],"no-unused-vars","'formatDateToStr_ddmmyy' is defined but never used.","Identifier","unusedVar","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"78","text":"79"},"react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'setDayArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'returnToTimeLine'. Either include it or remove the dependency array. If 'returnToTimeLine' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["80"],"no-global-assign","no-unsafe-negation",[2195,2195],"()",{"desc":"81","fix":"82"},"Update the dependencies array to be: [num, returnToTimeLine]",{"range":"83","text":"84"},[242,247],"[num, returnToTimeLine]"]