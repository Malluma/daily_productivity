[{"/home/melkiy/projects/daily_productivity/src/components/DayLine.js":"1","/home/melkiy/projects/daily_productivity/src/store/reducers.js":"2","/home/melkiy/projects/daily_productivity/src/components/App.js":"3","/home/melkiy/projects/daily_productivity/src/components/TimeLine.js":"4","/home/melkiy/projects/daily_productivity/src/components/DateInDayLine.js":"5","/home/melkiy/projects/daily_productivity/src/index.js":"6","/home/melkiy/projects/daily_productivity/src/store/actions.js":"7","/home/melkiy/projects/daily_productivity/src/components/SetInterval.js":"8","/home/melkiy/projects/daily_productivity/src/components/DayLineHeader.js":"9"},{"size":1891,"mtime":1631703577038,"results":"10","hashOfConfig":"11"},{"size":5783,"mtime":1635413792870,"results":"12","hashOfConfig":"11"},{"size":759,"mtime":1635413149966,"results":"13","hashOfConfig":"11"},{"size":1101,"mtime":1631701522589,"results":"14","hashOfConfig":"11"},{"size":594,"mtime":1631550460369,"results":"15","hashOfConfig":"11"},{"size":536,"mtime":1631700693135,"results":"16","hashOfConfig":"11"},{"size":1088,"mtime":1631703598154,"results":"17","hashOfConfig":"11"},{"size":3376,"mtime":1631441907714,"results":"18","hashOfConfig":"11"},{"size":554,"mtime":1630587714382,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"z3nhvi",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/melkiy/projects/daily_productivity/src/components/DayLine.js",[],["41","42"],"/home/melkiy/projects/daily_productivity/src/store/reducers.js",[],"/home/melkiy/projects/daily_productivity/src/components/App.js",[],"/home/melkiy/projects/daily_productivity/src/components/TimeLine.js",[],"/home/melkiy/projects/daily_productivity/src/components/DateInDayLine.js",[],"/home/melkiy/projects/daily_productivity/src/index.js",[],["43","44"],"/home/melkiy/projects/daily_productivity/src/store/actions.js",[],"/home/melkiy/projects/daily_productivity/src/components/SetInterval.js",["45"],"import React from 'react';\nimport { getDateStr } from '../utils/utils.js'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { clearMarkedIntervals, addMarkedIntervalsToDays } from '../store/actions';\n\nfunction SetInterval() {\n\n\tlet intervalsForUpdate = useSelector(state => state.markedIntervals_upd)\n\tlet intervalsForCreate = useSelector(state => state.markedIntervals_new)\n\tconst dispatch = useDispatch()\n\n\tfunction createNewInterval(activityType) {\n\n\t\tconsole.log('createNewInterval')\n\t\tconsole.log(intervalsForCreate)\n\t\tconsole.log(intervalsForUpdate)\n\t\t\n\t\t//CREATE INTERVALS\n\t\tlet body = [];\n\t\tfor (let day in intervalsForCreate) {\n\n\t\t\tintervalsForCreate[day].forEach((i) => {\n\t\t\t\tconst minutesFrom = i * 30;\n\t\t\t\tbody.push({\n\t\t\t\t\tactivity_type: activityType,\n\t\t\t\t\tinterval_start: getDateStr(day, minutesFrom),\n\t\t\t\t\tuser_id: '000001',\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tfetch('http://localhost:3001/intervals', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: new Headers({\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t}),\n\t\t\tbody: JSON.stringify(body),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((json) => console.log('intervals are added'))\n\t\t\t.catch((error) => console.error('error', error));\n\n\t\t//UPDATE INTERVALS\n\t\tbody = [];\n\t\tfor (let day in intervalsForUpdate) {\n\n\t\t\tintervalsForUpdate[day].forEach((i) => {\n\t\t\t\tconst minutesFrom = i * 30;\n\t\t\t\tbody.push({\n\t\t\t\t\tactivity_type: activityType,\n\t\t\t\t\tinterval_start: getDateStr(day, minutesFrom),\n\t\t\t\t\tuser_id: '000001',\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tfetch('http://localhost:3001/intervals/update', {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: new Headers({\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t}),\n\t\t\tbody: JSON.stringify(body),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((json) => console.log('intervals are updated'))\n\t\t\t.catch((error) => console.error('error', error));\n\n\t\tdispatch(addMarkedIntervalsToDays(activityType))\n\t\tdispatch(clearMarkedIntervals())\n\t}\n\n\treturn (\n\t\t<div className=\"setInterval\">\n\t\t\t<div className=\"title\">Daily Productivity</div>\n\t\t\t<button className=\"btn btnActions work\" onClick={() => createNewInterval('work')}>WORK</button>\n\t\t\t<button className=\"btn btnActions mentorship\" onClick={() => createNewInterval('mentorship')}>MENTORSHIP</button>\n\t\t\t<button className=\"btn btnActions study\" onClick={() => createNewInterval('study')}>STUDY</button>\n\t\t\t<button className=\"btn btnActions eat\" onClick={() => createNewInterval('eat')}>EAT</button>\n\t\t\t<button className=\"btn btnActions routine\" onClick={() => createNewInterval('routine')}>ROUTINE</button>\n\t\t\t<button className=\"btn btnActions idle\" onClick={() => createNewInterval('idle')}>IDLE</button>\n\t\t\t<button className=\"btn btnActions games-series\" onClick={() => createNewInterval('games-series')}>GAMES, SERIES</button>\n\t\t\t<button className=\"btn btnActions hobby\" onClick={() => createNewInterval('hobby')}>HOBBY</button>\n\t\t\t<button className=\"btn btnActions sport\" onClick={() => createNewInterval('sport')}>SPORT</button>\n\t\t\t<button className=\"btn btnActions walk\" onClick={() => createNewInterval('walk')}>WALK</button>\n\t\t\t<button className=\"btn btnActions communicate\" onClick={() => createNewInterval('communicate')}>COMMUNICATE</button>\n\t\t\t<button className=\"btn btnActions sleep\" onClick={() => createNewInterval('sleep')}>SLEEP</button>\n\t\t</div>\n\t);\n}\n\nexport default SetInterval;\n","/home/melkiy/projects/daily_productivity/src/components/DayLineHeader.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":22,"column":36,"nodeType":"54","messageId":"55","endLine":29,"endColumn":5},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'body'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]